import { Component } from '@/app/services/db/schema';

export const mockComponents: Component[] = [
  {
    id: '1',
    name: 'Button Component',
    thumbnail: 'https://placehold.co/100x100',
    status: 'Done',
    tags: ['FE', 'design'],
    published: true,
    verified: true,
    description: 'A reusable button component with various styles',
    designFile: 'button-design.fig',
    code: {
      frontend: {
        jsx: 'const Button = ({ children, ...props }) => <button {...props}>{children}</button>',
        css: '.button { /* styles */ }',
      },
      backend: {},
      test: {
        jest: 'test("Button renders", () => { render(<Button>Click me</Button>); expect(screen.getByText("Click me")).toBeInTheDocument(); });',
      },
    },
    codeFramework: 'react',
    componentDoc: '# Button Component\n\nThis is a reusable button component...',
    createdAt: Date.now(),
    updatedAt: Date.now(),
    creator: 'system',
    version: '1.0.0',
    dependencies: [],
  },
  {
    id: '2',
    name: 'Button Component',
    thumbnail: 'https://placehold.co/100x100',
    status: 'Done',
    tags: ['FE', 'design'],
    published: true,
    verified: true,
    description: 'A reusable button component with various styles',
    designFile: 'button-design.fig',
    code: {
      frontend: {
        jsx: 'const Button = ({ children, ...props }) => <button {...props}>{children}</button>',
        css: '.button { /* styles */ }',
      },
      backend: {},
      test: {
        jest: 'test("Button renders", () => { render(<Button>Click me</Button>); expect(screen.getByText("Click me")).toBeInTheDocument(); });',
      },
    },
    codeFramework: 'react',
    componentDoc: '# Button Component\n\nThis is a reusable button component...',
    createdAt: Date.now(),
    updatedAt: Date.now(),
    creator: 'system',
    version: '1.0.0',
    dependencies: [],
  },
  {
    id: '4',
    name: 'Button Component',
    thumbnail: 'https://placehold.co/100x100',
    status: 'Done',
    tags: ['FE', 'design'],
    published: true,
    verified: true,
    description: 'A reusable button component with various styles',
    designFile: 'button-design.fig',
    code: {
      frontend: {
        jsx: 'const Button = ({ children, ...props }) => <button {...props}>{children}</button>',
        css: '.button { /* styles */ }',
      },
      backend: {},
      test: {
        jest: 'test("Button renders", () => { render(<Button>Click me</Button>); expect(screen.getByText("Click me")).toBeInTheDocument(); });',
      },
    },
    codeFramework: 'react',
    componentDoc: '# Button Component\n\nThis is a reusable button component...',
    createdAt: Date.now(),
    updatedAt: Date.now(),
    creator: 'system',
    version: '1.0.0',
    dependencies: [],
  },
  {
    id: '5',
    name: 'Button Component',
    thumbnail: 'https://placehold.co/100x100',
    status: 'Done',
    tags: ['FE', 'design'],
    published: true,
    verified: true,
    description: 'A reusable button component with various styles',
    designFile: 'button-design.fig',
    code: {
      frontend: {
        jsx: 'const Button = ({ children, ...props }) => <button {...props}>{children}</button>',
        css: '.button { /* styles */ }',
      },
      backend: {},
      test: {
        jest: 'test("Button renders", () => { render(<Button>Click me</Button>); expect(screen.getByText("Click me")).toBeInTheDocument(); });',
      },
    },
    codeFramework: 'react',
    componentDoc: '# Button Component\n\nThis is a reusable button component...',
    createdAt: Date.now(),
    updatedAt: Date.now(),
    creator: 'system',
    version: '1.0.0',
    dependencies: [],
  },
];
